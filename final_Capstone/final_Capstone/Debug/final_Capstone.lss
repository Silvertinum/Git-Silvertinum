
final_Capstone.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000aa2  00000b36  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000aa2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800120  00800120  00000b56  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000b56  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bb4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00000bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000ec6  00000000  00000000  00000cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b46  00000000  00000000  00001b7a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000067b  00000000  00000000  000026c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000228  00000000  00000000  00002d3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005eb  00000000  00000000  00002f64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000066b  00000000  00000000  0000354f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  00003bba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	66 c0       	rjmp	.+204    	; 0xd2 <__bad_interrupt>
   6:	00 00       	nop
   8:	64 c0       	rjmp	.+200    	; 0xd2 <__bad_interrupt>
   a:	00 00       	nop
   c:	62 c0       	rjmp	.+196    	; 0xd2 <__bad_interrupt>
   e:	00 00       	nop
  10:	60 c0       	rjmp	.+192    	; 0xd2 <__bad_interrupt>
  12:	00 00       	nop
  14:	5e c0       	rjmp	.+188    	; 0xd2 <__bad_interrupt>
  16:	00 00       	nop
  18:	5c c0       	rjmp	.+184    	; 0xd2 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5a c0       	rjmp	.+180    	; 0xd2 <__bad_interrupt>
  1e:	00 00       	nop
  20:	58 c0       	rjmp	.+176    	; 0xd2 <__bad_interrupt>
  22:	00 00       	nop
  24:	56 c0       	rjmp	.+172    	; 0xd2 <__bad_interrupt>
  26:	00 00       	nop
  28:	54 c0       	rjmp	.+168    	; 0xd2 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	52 c0       	rjmp	.+164    	; 0xd2 <__bad_interrupt>
  2e:	00 00       	nop
  30:	50 c0       	rjmp	.+160    	; 0xd2 <__bad_interrupt>
  32:	00 00       	nop
  34:	4e c0       	rjmp	.+156    	; 0xd2 <__bad_interrupt>
  36:	00 00       	nop
  38:	4c c0       	rjmp	.+152    	; 0xd2 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4a c0       	rjmp	.+148    	; 0xd2 <__bad_interrupt>
  3e:	00 00       	nop
  40:	49 c0       	rjmp	.+146    	; 0xd4 <__vector_16>
  42:	00 00       	nop
  44:	46 c0       	rjmp	.+140    	; 0xd2 <__bad_interrupt>
  46:	00 00       	nop
  48:	44 c0       	rjmp	.+136    	; 0xd2 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	42 c0       	rjmp	.+132    	; 0xd2 <__bad_interrupt>
  4e:	00 00       	nop
  50:	40 c0       	rjmp	.+128    	; 0xd2 <__bad_interrupt>
  52:	00 00       	nop
  54:	3e c0       	rjmp	.+124    	; 0xd2 <__bad_interrupt>
  56:	00 00       	nop
  58:	3c c0       	rjmp	.+120    	; 0xd2 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3a c0       	rjmp	.+116    	; 0xd2 <__bad_interrupt>
  5e:	00 00       	nop
  60:	38 c0       	rjmp	.+112    	; 0xd2 <__bad_interrupt>
  62:	00 00       	nop
  64:	36 c0       	rjmp	.+108    	; 0xd2 <__bad_interrupt>
  66:	00 00       	nop
  68:	34 c0       	rjmp	.+104    	; 0xd2 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	32 c0       	rjmp	.+100    	; 0xd2 <__bad_interrupt>
  6e:	00 00       	nop
  70:	30 c0       	rjmp	.+96     	; 0xd2 <__bad_interrupt>
  72:	00 00       	nop
  74:	2e c0       	rjmp	.+92     	; 0xd2 <__bad_interrupt>
  76:	00 00       	nop
  78:	2c c0       	rjmp	.+88     	; 0xd2 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2a c0       	rjmp	.+84     	; 0xd2 <__bad_interrupt>
  7e:	00 00       	nop
  80:	28 c0       	rjmp	.+80     	; 0xd2 <__bad_interrupt>
  82:	00 00       	nop
  84:	26 c0       	rjmp	.+76     	; 0xd2 <__bad_interrupt>
  86:	00 00       	nop
  88:	24 c0       	rjmp	.+72     	; 0xd2 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
  8c:	63 64       	ori	r22, 0x43	; 67
  8e:	69 6e       	ori	r22, 0xE9	; 233
  90:	6f 70       	andi	r22, 0x0F	; 15
  92:	73 75       	andi	r23, 0x53	; 83
  94:	78 58       	subi	r23, 0x88	; 136
  96:	5b 00       	.word	0x005b	; ????

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e1       	ldi	r29, 0x10	; 16
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e2 ea       	ldi	r30, 0xA2	; 162
  ac:	fa e0       	ldi	r31, 0x0A	; 10
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a0 32       	cpi	r26, 0x20	; 32
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>

000000be <__do_clear_bss>:
  be:	21 e0       	ldi	r18, 0x01	; 1
  c0:	a0 e2       	ldi	r26, 0x20	; 32
  c2:	b1 e0       	ldi	r27, 0x01	; 1
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	ac 32       	cpi	r26, 0x2C	; 44
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	71 d0       	rcall	.+226    	; 0x1b2 <main>
  d0:	e6 c4       	rjmp	.+2508   	; 0xa9e <_exit>

000000d2 <__bad_interrupt>:
  d2:	96 cf       	rjmp	.-212    	; 0x0 <__vectors>

000000d4 <__vector_16>:

FILE INPUT	\
= FDEV_SETUP_STREAM(NULL, UART1_receive, _FDEV_SETUP_READ);

ISR(TIMER0_OVF_vect)	// 오버플로 인터럽트
{
  d4:	1f 92       	push	r1
  d6:	0f 92       	push	r0
  d8:	0f b6       	in	r0, 0x3f	; 63
  da:	0f 92       	push	r0
  dc:	11 24       	eor	r1, r1
  de:	0b b6       	in	r0, 0x3b	; 59
  e0:	0f 92       	push	r0
  e2:	cf 92       	push	r12
  e4:	df 92       	push	r13
  e6:	ef 92       	push	r14
  e8:	ff 92       	push	r15
  ea:	0f 93       	push	r16
  ec:	1f 93       	push	r17
  ee:	2f 93       	push	r18
  f0:	3f 93       	push	r19
  f2:	4f 93       	push	r20
  f4:	5f 93       	push	r21
  f6:	6f 93       	push	r22
  f8:	7f 93       	push	r23
  fa:	8f 93       	push	r24
  fc:	9f 93       	push	r25
  fe:	af 93       	push	r26
 100:	bf 93       	push	r27
 102:	ef 93       	push	r30
 104:	ff 93       	push	r31
	unsigned long m = timer0_millis;
 106:	c0 90 22 01 	lds	r12, 0x0122	; 0x800122 <timer0_millis>
 10a:	d0 90 23 01 	lds	r13, 0x0123	; 0x800123 <timer0_millis+0x1>
 10e:	e0 90 24 01 	lds	r14, 0x0124	; 0x800124 <timer0_millis+0x2>
 112:	f0 90 25 01 	lds	r15, 0x0125	; 0x800125 <timer0_millis+0x3>
	int f = timer0_micros;
 116:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 11a:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
	m += MILLIS_INCREMENT_PER_OVERFLOW;	// 밀리초 단위 시간 증가
 11e:	97 01       	movw	r18, r14
 120:	86 01       	movw	r16, r12
 122:	0f 5f       	subi	r16, 0xFF	; 255
 124:	1f 4f       	sbci	r17, 0xFF	; 255
 126:	2f 4f       	sbci	r18, 0xFF	; 255
 128:	3f 4f       	sbci	r19, 0xFF	; 255
	f += MICROS_INCREMENT_PER_OVERFLOW;	// 마이크로초 단위 시간 증가
	
	// 마이크로초가 1,000을 넘어가면 밀리초를 증가시킴
	m += (f/1000);
 12a:	48 96       	adiw	r24, 0x18	; 24
 12c:	68 ee       	ldi	r22, 0xE8	; 232
 12e:	73 e0       	ldi	r23, 0x03	; 3
 130:	e3 d0       	rcall	.+454    	; 0x2f8 <__divmodhi4>
 132:	6b 01       	movw	r12, r22
 134:	77 0f       	add	r23, r23
 136:	ee 08       	sbc	r14, r14
 138:	ff 08       	sbc	r15, r15
 13a:	c0 0e       	add	r12, r16
 13c:	d1 1e       	adc	r13, r17
 13e:	e2 1e       	adc	r14, r18
 140:	f3 1e       	adc	r15, r19
	f = m % 1000;
 142:	c7 01       	movw	r24, r14
 144:	b6 01       	movw	r22, r12
 146:	28 ee       	ldi	r18, 0xE8	; 232
 148:	33 e0       	ldi	r19, 0x03	; 3
 14a:	40 e0       	ldi	r20, 0x00	; 0
 14c:	50 e0       	ldi	r21, 0x00	; 0
 14e:	e7 d0       	rcall	.+462    	; 0x31e <__udivmodsi4>
	
	timer0_millis = m;
 150:	c0 92 22 01 	sts	0x0122, r12	; 0x800122 <timer0_millis>
 154:	d0 92 23 01 	sts	0x0123, r13	; 0x800123 <timer0_millis+0x1>
 158:	e0 92 24 01 	sts	0x0124, r14	; 0x800124 <timer0_millis+0x2>
 15c:	f0 92 25 01 	sts	0x0125, r15	; 0x800125 <timer0_millis+0x3>
	timer0_micros = f;
 160:	70 93 21 01 	sts	0x0121, r23	; 0x800121 <__data_end+0x1>
 164:	60 93 20 01 	sts	0x0120, r22	; 0x800120 <__data_end>
}
 168:	ff 91       	pop	r31
 16a:	ef 91       	pop	r30
 16c:	bf 91       	pop	r27
 16e:	af 91       	pop	r26
 170:	9f 91       	pop	r25
 172:	8f 91       	pop	r24
 174:	7f 91       	pop	r23
 176:	6f 91       	pop	r22
 178:	5f 91       	pop	r21
 17a:	4f 91       	pop	r20
 17c:	3f 91       	pop	r19
 17e:	2f 91       	pop	r18
 180:	1f 91       	pop	r17
 182:	0f 91       	pop	r16
 184:	ff 90       	pop	r15
 186:	ef 90       	pop	r14
 188:	df 90       	pop	r13
 18a:	cf 90       	pop	r12
 18c:	0f 90       	pop	r0
 18e:	0b be       	out	0x3b, r0	; 59
 190:	0f 90       	pop	r0
 192:	0f be       	out	0x3f, r0	; 63
 194:	0f 90       	pop	r0
 196:	1f 90       	pop	r1
 198:	18 95       	reti

0000019a <millis>:

unsigned long millis()
{
	unsigned long m;
	uint8_t oldSREG = SREG;	// 상태 레지스터 값 저장
 19a:	2f b7       	in	r18, 0x3f	; 63
	
	cli();		// timer0_millis 값을 읽는 동안 값이 변하지 않도록 인터럽트 비활성화
 19c:	f8 94       	cli
	
	m = timer0_millis;
 19e:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <timer0_millis>
 1a2:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <timer0_millis+0x1>
 1a6:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <timer0_millis+0x2>
 1aa:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <timer0_millis+0x3>
	
	SREG = oldSREG;		// 이전 상태 레지스터 값 복원
 1ae:	2f bf       	out	0x3f, r18	; 63
	
	return m;			// 프로그램 시작 후 경과 시간
}
 1b0:	08 95       	ret

000001b2 <main>:


int main(void)
{
 1b2:	cf 93       	push	r28
 1b4:	df 93       	push	r29
 1b6:	1f 92       	push	r1
 1b8:	cd b7       	in	r28, 0x3d	; 61
 1ba:	de b7       	in	r29, 0x3e	; 62
	stdout = &OUTPUT;							// printf 사용 설정
 1bc:	e6 e2       	ldi	r30, 0x26	; 38
 1be:	f1 e0       	ldi	r31, 0x01	; 1
 1c0:	8e e0       	ldi	r24, 0x0E	; 14
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	93 83       	std	Z+3, r25	; 0x03
 1c6:	82 83       	std	Z+2, r24	; 0x02
	stdin = &INPUT;								// scanf 사용 설정
 1c8:	80 e0       	ldi	r24, 0x00	; 0
 1ca:	91 e0       	ldi	r25, 0x01	; 1
 1cc:	91 83       	std	Z+1, r25	; 0x01
 1ce:	80 83       	st	Z, r24
	DDRF &= ~0x01;
 1d0:	e1 e6       	ldi	r30, 0x61	; 97
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	8e 7f       	andi	r24, 0xFE	; 254
 1d8:	80 83       	st	Z, r24
	
	UART1_init();								// UART1 초기화
 1da:	66 d0       	rcall	.+204    	; 0x2a8 <UART1_init>
	UART0_init();
 1dc:	54 d0       	rcall	.+168    	; 0x286 <UART0_init>
 1de:	83 b7       	in	r24, 0x33	; 51
	
	TCCR0 |= (1 << CS02);	//분주비를 64로 설정
 1e0:	84 60       	ori	r24, 0x04	; 4
 1e2:	83 bf       	out	0x33, r24	; 51
 1e4:	87 b7       	in	r24, 0x37	; 55
	TIMSK |= (1 << TOIE0);	// 오버플로 인터럽트 허용
 1e6:	81 60       	ori	r24, 0x01	; 1
 1e8:	87 bf       	out	0x37, r24	; 55
	
	sei();				// 전역적으로 인터럽트 허용
 1ea:	78 94       	sei
	
	int current_pirstate, previous_pirstate;
	unsigned long time_previous, time_current;
	
	time_previous = millis();		// 시작 시간
 1ec:	d6 df       	rcall	.-84     	; 0x19a <millis>
 1ee:	2b 01       	movw	r4, r22
 1f0:	3c 01       	movw	r6, r24
 1f2:	80 b1       	in	r24, 0x00	; 0
	previous_pirstate = (PINF & 0x01);
 1f4:	80 fb       	bst	r24, 0
 1f6:	aa 24       	eor	r10, r10
 1f8:	a0 f8       	bld	r10, 0
 1fa:	b1 2c       	mov	r11, r1
 1fc:	ce 01       	movw	r24, r28
					UART0_transmit(data_in);
					printf("%c", data_in);
				}
			else
				{
					scanf("%c", &data_in);
 1fe:	01 96       	adiw	r24, 0x01	; 1
 200:	4c 01       	movw	r8, r24
 202:	0f 2e       	mov	r0, r31
 204:	fc e1       	ldi	r31, 0x1C	; 28
 206:	2f 2e       	mov	r2, r31
 208:	f1 e0       	ldi	r31, 0x01	; 1
 20a:	3f 2e       	mov	r3, r31
 20c:	f0 2d       	mov	r31, r0
	previous_pirstate = (PINF & 0x01);
	
	while (1)
	{
		uint8_t data_in;
		time_current = millis();
 20e:	c5 df       	rcall	.-118    	; 0x19a <millis>
 210:	6b 01       	movw	r12, r22
 212:	7c 01       	movw	r14, r24
 214:	80 b1       	in	r24, 0x00	; 0
		current_pirstate = (PINF & 0x01);
 216:	08 2f       	mov	r16, r24
 218:	01 70       	andi	r16, 0x01	; 1
 21a:	10 e0       	ldi	r17, 0x00	; 0
 21c:	a0 16       	cp	r10, r16
		if((previous_pirstate != current_pirstate) || ((time_current - time_previous) > 5000))
 21e:	b1 06       	cpc	r11, r17
 220:	59 f4       	brne	.+22     	; 0x238 <main+0x86>
 222:	d7 01       	movw	r26, r14
 224:	c6 01       	movw	r24, r12
 226:	84 19       	sub	r24, r4
 228:	95 09       	sbc	r25, r5
 22a:	a6 09       	sbc	r26, r6
 22c:	b7 09       	sbc	r27, r7
 22e:	89 38       	cpi	r24, 0x89	; 137
 230:	93 41       	sbci	r25, 0x13	; 19
 232:	a1 05       	cpc	r26, r1
 234:	b1 05       	cpc	r27, r1
 236:	58 f3       	brcs	.-42     	; 0x20e <main+0x5c>
 238:	01 15       	cp	r16, r1
		{
			time_previous = time_current;
			previous_pirstate = current_pirstate;
			if(current_pirstate)
 23a:	11 05       	cpc	r17, r1
 23c:	91 f0       	breq	.+36     	; 0x262 <main+0xb0>
 23e:	9f 92       	push	r9
				{
					scanf("%c", &data_in);
 240:	8f 92       	push	r8
 242:	3f 92       	push	r3
 244:	2f 92       	push	r2
 246:	a6 d0       	rcall	.+332    	; 0x394 <scanf>
					UART0_transmit(data_in);
 248:	89 81       	ldd	r24, Y+1	; 0x01
 24a:	2a d0       	rcall	.+84     	; 0x2a0 <UART0_transmit>
 24c:	89 81       	ldd	r24, Y+1	; 0x01
					printf("%c", data_in);
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	9c d0       	rcall	.+312    	; 0x38a <putchar>
 252:	0f 90       	pop	r0
 254:	0f 90       	pop	r0
 256:	0f 90       	pop	r0
 258:	0f 90       	pop	r0
 25a:	26 01       	movw	r4, r12
 25c:	37 01       	movw	r6, r14
		uint8_t data_in;
		time_current = millis();
		current_pirstate = (PINF & 0x01);
		if((previous_pirstate != current_pirstate) || ((time_current - time_previous) > 5000))
		{
			time_previous = time_current;
 25e:	58 01       	movw	r10, r16
			previous_pirstate = current_pirstate;
 260:	d6 cf       	rjmp	.-84     	; 0x20e <main+0x5c>
					UART0_transmit(data_in);
					printf("%c", data_in);
				}
			else
				{
					scanf("%c", &data_in);
 262:	9f 92       	push	r9
 264:	8f 92       	push	r8
 266:	3f 92       	push	r3
 268:	2f 92       	push	r2
 26a:	94 d0       	rcall	.+296    	; 0x394 <scanf>
					UART0_transmit(data_in);
 26c:	89 81       	ldd	r24, Y+1	; 0x01
 26e:	18 d0       	rcall	.+48     	; 0x2a0 <UART0_transmit>
 270:	89 81       	ldd	r24, Y+1	; 0x01
					printf("%c", data_in);
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	8a d0       	rcall	.+276    	; 0x38a <putchar>
 276:	0f 90       	pop	r0
 278:	0f 90       	pop	r0
 27a:	0f 90       	pop	r0
 27c:	0f 90       	pop	r0
 27e:	26 01       	movw	r4, r12
 280:	37 01       	movw	r6, r14
		uint8_t data_in;
		time_current = millis();
		current_pirstate = (PINF & 0x01);
		if((previous_pirstate != current_pirstate) || ((time_current - time_previous) > 5000))
		{
			time_previous = time_current;
 282:	58 01       	movw	r10, r16
 284:	c4 cf       	rjmp	.-120    	; 0x20e <main+0x5c>

00000286 <UART0_init>:
 286:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 28a:	8f ec       	ldi	r24, 0xCF	; 207
 28c:	89 b9       	out	0x09, r24	; 9
 28e:	59 9a       	sbi	0x0b, 1	; 11
 290:	e5 e9       	ldi	r30, 0x95	; 149
 292:	f0 e0       	ldi	r31, 0x00	; 0
 294:	80 81       	ld	r24, Z
 296:	86 60       	ori	r24, 0x06	; 6
 298:	80 83       	st	Z, r24
 29a:	54 9a       	sbi	0x0a, 4	; 10
 29c:	53 9a       	sbi	0x0a, 3	; 10
 29e:	08 95       	ret

000002a0 <UART0_transmit>:
 2a0:	5d 9b       	sbis	0x0b, 5	; 11
 2a2:	fe cf       	rjmp	.-4      	; 0x2a0 <UART0_transmit>
 2a4:	8c b9       	out	0x0c, r24	; 12
 2a6:	08 95       	ret

000002a8 <UART1_init>:
 2a8:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
 2ac:	8f ec       	ldi	r24, 0xCF	; 207
 2ae:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
 2b2:	eb e9       	ldi	r30, 0x9B	; 155
 2b4:	f0 e0       	ldi	r31, 0x00	; 0
 2b6:	80 81       	ld	r24, Z
 2b8:	82 60       	ori	r24, 0x02	; 2
 2ba:	80 83       	st	Z, r24
 2bc:	ed e9       	ldi	r30, 0x9D	; 157
 2be:	f0 e0       	ldi	r31, 0x00	; 0
 2c0:	80 81       	ld	r24, Z
 2c2:	86 60       	ori	r24, 0x06	; 6
 2c4:	80 83       	st	Z, r24
 2c6:	ea e9       	ldi	r30, 0x9A	; 154
 2c8:	f0 e0       	ldi	r31, 0x00	; 0
 2ca:	80 81       	ld	r24, Z
 2cc:	80 61       	ori	r24, 0x10	; 16
 2ce:	80 83       	st	Z, r24
 2d0:	80 81       	ld	r24, Z
 2d2:	88 60       	ori	r24, 0x08	; 8
 2d4:	80 83       	st	Z, r24
 2d6:	08 95       	ret

000002d8 <UART1_transmit>:
 2d8:	eb e9       	ldi	r30, 0x9B	; 155
 2da:	f0 e0       	ldi	r31, 0x00	; 0
 2dc:	90 81       	ld	r25, Z
 2de:	95 ff       	sbrs	r25, 5
 2e0:	fd cf       	rjmp	.-6      	; 0x2dc <UART1_transmit+0x4>
 2e2:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 2e6:	08 95       	ret

000002e8 <UART1_receive>:
 2e8:	eb e9       	ldi	r30, 0x9B	; 155
 2ea:	f0 e0       	ldi	r31, 0x00	; 0
 2ec:	80 81       	ld	r24, Z
 2ee:	88 23       	and	r24, r24
 2f0:	ec f7       	brge	.-6      	; 0x2ec <UART1_receive+0x4>
 2f2:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 2f6:	08 95       	ret

000002f8 <__divmodhi4>:
 2f8:	97 fb       	bst	r25, 7
 2fa:	07 2e       	mov	r0, r23
 2fc:	16 f4       	brtc	.+4      	; 0x302 <__divmodhi4+0xa>
 2fe:	00 94       	com	r0
 300:	06 d0       	rcall	.+12     	; 0x30e <__divmodhi4_neg1>
 302:	77 fd       	sbrc	r23, 7
 304:	08 d0       	rcall	.+16     	; 0x316 <__divmodhi4_neg2>
 306:	2d d0       	rcall	.+90     	; 0x362 <__udivmodhi4>
 308:	07 fc       	sbrc	r0, 7
 30a:	05 d0       	rcall	.+10     	; 0x316 <__divmodhi4_neg2>
 30c:	3e f4       	brtc	.+14     	; 0x31c <__divmodhi4_exit>

0000030e <__divmodhi4_neg1>:
 30e:	90 95       	com	r25
 310:	81 95       	neg	r24
 312:	9f 4f       	sbci	r25, 0xFF	; 255
 314:	08 95       	ret

00000316 <__divmodhi4_neg2>:
 316:	70 95       	com	r23
 318:	61 95       	neg	r22
 31a:	7f 4f       	sbci	r23, 0xFF	; 255

0000031c <__divmodhi4_exit>:
 31c:	08 95       	ret

0000031e <__udivmodsi4>:
 31e:	a1 e2       	ldi	r26, 0x21	; 33
 320:	1a 2e       	mov	r1, r26
 322:	aa 1b       	sub	r26, r26
 324:	bb 1b       	sub	r27, r27
 326:	fd 01       	movw	r30, r26
 328:	0d c0       	rjmp	.+26     	; 0x344 <__udivmodsi4_ep>

0000032a <__udivmodsi4_loop>:
 32a:	aa 1f       	adc	r26, r26
 32c:	bb 1f       	adc	r27, r27
 32e:	ee 1f       	adc	r30, r30
 330:	ff 1f       	adc	r31, r31
 332:	a2 17       	cp	r26, r18
 334:	b3 07       	cpc	r27, r19
 336:	e4 07       	cpc	r30, r20
 338:	f5 07       	cpc	r31, r21
 33a:	20 f0       	brcs	.+8      	; 0x344 <__udivmodsi4_ep>
 33c:	a2 1b       	sub	r26, r18
 33e:	b3 0b       	sbc	r27, r19
 340:	e4 0b       	sbc	r30, r20
 342:	f5 0b       	sbc	r31, r21

00000344 <__udivmodsi4_ep>:
 344:	66 1f       	adc	r22, r22
 346:	77 1f       	adc	r23, r23
 348:	88 1f       	adc	r24, r24
 34a:	99 1f       	adc	r25, r25
 34c:	1a 94       	dec	r1
 34e:	69 f7       	brne	.-38     	; 0x32a <__udivmodsi4_loop>
 350:	60 95       	com	r22
 352:	70 95       	com	r23
 354:	80 95       	com	r24
 356:	90 95       	com	r25
 358:	9b 01       	movw	r18, r22
 35a:	ac 01       	movw	r20, r24
 35c:	bd 01       	movw	r22, r26
 35e:	cf 01       	movw	r24, r30
 360:	08 95       	ret

00000362 <__udivmodhi4>:
 362:	aa 1b       	sub	r26, r26
 364:	bb 1b       	sub	r27, r27
 366:	51 e1       	ldi	r21, 0x11	; 17
 368:	07 c0       	rjmp	.+14     	; 0x378 <__udivmodhi4_ep>

0000036a <__udivmodhi4_loop>:
 36a:	aa 1f       	adc	r26, r26
 36c:	bb 1f       	adc	r27, r27
 36e:	a6 17       	cp	r26, r22
 370:	b7 07       	cpc	r27, r23
 372:	10 f0       	brcs	.+4      	; 0x378 <__udivmodhi4_ep>
 374:	a6 1b       	sub	r26, r22
 376:	b7 0b       	sbc	r27, r23

00000378 <__udivmodhi4_ep>:
 378:	88 1f       	adc	r24, r24
 37a:	99 1f       	adc	r25, r25
 37c:	5a 95       	dec	r21
 37e:	a9 f7       	brne	.-22     	; 0x36a <__udivmodhi4_loop>
 380:	80 95       	com	r24
 382:	90 95       	com	r25
 384:	bc 01       	movw	r22, r24
 386:	cd 01       	movw	r24, r26
 388:	08 95       	ret

0000038a <putchar>:
 38a:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <__iob+0x2>
 38e:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <__iob+0x3>
 392:	2d c3       	rjmp	.+1626   	; 0x9ee <fputc>

00000394 <scanf>:
 394:	cf 93       	push	r28
 396:	df 93       	push	r29
 398:	cd b7       	in	r28, 0x3d	; 61
 39a:	de b7       	in	r29, 0x3e	; 62
 39c:	ae 01       	movw	r20, r28
 39e:	4b 5f       	subi	r20, 0xFB	; 251
 3a0:	5f 4f       	sbci	r21, 0xFF	; 255
 3a2:	fa 01       	movw	r30, r20
 3a4:	61 91       	ld	r22, Z+
 3a6:	71 91       	ld	r23, Z+
 3a8:	af 01       	movw	r20, r30
 3aa:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__iob>
 3ae:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__iob+0x1>
 3b2:	b5 d1       	rcall	.+874    	; 0x71e <vfscanf>
 3b4:	df 91       	pop	r29
 3b6:	cf 91       	pop	r28
 3b8:	08 95       	ret

000003ba <putval>:
 3ba:	20 fd       	sbrc	r18, 0
 3bc:	09 c0       	rjmp	.+18     	; 0x3d0 <putval+0x16>
 3be:	fc 01       	movw	r30, r24
 3c0:	23 fd       	sbrc	r18, 3
 3c2:	05 c0       	rjmp	.+10     	; 0x3ce <putval+0x14>
 3c4:	22 ff       	sbrs	r18, 2
 3c6:	02 c0       	rjmp	.+4      	; 0x3cc <putval+0x12>
 3c8:	73 83       	std	Z+3, r23	; 0x03
 3ca:	62 83       	std	Z+2, r22	; 0x02
 3cc:	51 83       	std	Z+1, r21	; 0x01
 3ce:	40 83       	st	Z, r20
 3d0:	08 95       	ret

000003d2 <mulacc>:
 3d2:	44 fd       	sbrc	r20, 4
 3d4:	17 c0       	rjmp	.+46     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3d6:	46 fd       	sbrc	r20, 6
 3d8:	17 c0       	rjmp	.+46     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3da:	ab 01       	movw	r20, r22
 3dc:	bc 01       	movw	r22, r24
 3de:	da 01       	movw	r26, r20
 3e0:	fb 01       	movw	r30, r22
 3e2:	aa 0f       	add	r26, r26
 3e4:	bb 1f       	adc	r27, r27
 3e6:	ee 1f       	adc	r30, r30
 3e8:	ff 1f       	adc	r31, r31
 3ea:	10 94       	com	r1
 3ec:	d1 f7       	brne	.-12     	; 0x3e2 <mulacc+0x10>
 3ee:	4a 0f       	add	r20, r26
 3f0:	5b 1f       	adc	r21, r27
 3f2:	6e 1f       	adc	r22, r30
 3f4:	7f 1f       	adc	r23, r31
 3f6:	cb 01       	movw	r24, r22
 3f8:	ba 01       	movw	r22, r20
 3fa:	66 0f       	add	r22, r22
 3fc:	77 1f       	adc	r23, r23
 3fe:	88 1f       	adc	r24, r24
 400:	99 1f       	adc	r25, r25
 402:	09 c0       	rjmp	.+18     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 404:	33 e0       	ldi	r19, 0x03	; 3
 406:	01 c0       	rjmp	.+2      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 408:	34 e0       	ldi	r19, 0x04	; 4
 40a:	66 0f       	add	r22, r22
 40c:	77 1f       	adc	r23, r23
 40e:	88 1f       	adc	r24, r24
 410:	99 1f       	adc	r25, r25
 412:	31 50       	subi	r19, 0x01	; 1
 414:	d1 f7       	brne	.-12     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 416:	62 0f       	add	r22, r18
 418:	71 1d       	adc	r23, r1
 41a:	81 1d       	adc	r24, r1
 41c:	91 1d       	adc	r25, r1
 41e:	08 95       	ret

00000420 <skip_spaces>:
 420:	0f 93       	push	r16
 422:	1f 93       	push	r17
 424:	cf 93       	push	r28
 426:	df 93       	push	r29
 428:	8c 01       	movw	r16, r24
 42a:	c8 01       	movw	r24, r16
 42c:	a2 d2       	rcall	.+1348   	; 0x972 <fgetc>
 42e:	ec 01       	movw	r28, r24
 430:	97 fd       	sbrc	r25, 7
 432:	06 c0       	rjmp	.+12     	; 0x440 <skip_spaces+0x20>
 434:	8b d2       	rcall	.+1302   	; 0x94c <isspace>
 436:	89 2b       	or	r24, r25
 438:	c1 f7       	brne	.-16     	; 0x42a <skip_spaces+0xa>
 43a:	b8 01       	movw	r22, r16
 43c:	ce 01       	movw	r24, r28
 43e:	13 d3       	rcall	.+1574   	; 0xa66 <ungetc>
 440:	ce 01       	movw	r24, r28
 442:	df 91       	pop	r29
 444:	cf 91       	pop	r28
 446:	1f 91       	pop	r17
 448:	0f 91       	pop	r16
 44a:	08 95       	ret

0000044c <conv_int>:
 44c:	8f 92       	push	r8
 44e:	9f 92       	push	r9
 450:	af 92       	push	r10
 452:	bf 92       	push	r11
 454:	ef 92       	push	r14
 456:	ff 92       	push	r15
 458:	0f 93       	push	r16
 45a:	1f 93       	push	r17
 45c:	cf 93       	push	r28
 45e:	df 93       	push	r29
 460:	8c 01       	movw	r16, r24
 462:	d6 2f       	mov	r29, r22
 464:	7a 01       	movw	r14, r20
 466:	b2 2e       	mov	r11, r18
 468:	84 d2       	rcall	.+1288   	; 0x972 <fgetc>
 46a:	9c 01       	movw	r18, r24
 46c:	33 27       	eor	r19, r19
 46e:	2b 32       	cpi	r18, 0x2B	; 43
 470:	31 05       	cpc	r19, r1
 472:	31 f0       	breq	.+12     	; 0x480 <conv_int+0x34>
 474:	2d 32       	cpi	r18, 0x2D	; 45
 476:	31 05       	cpc	r19, r1
 478:	59 f4       	brne	.+22     	; 0x490 <conv_int+0x44>
 47a:	8b 2d       	mov	r24, r11
 47c:	80 68       	ori	r24, 0x80	; 128
 47e:	b8 2e       	mov	r11, r24
 480:	d1 50       	subi	r29, 0x01	; 1
 482:	11 f4       	brne	.+4      	; 0x488 <conv_int+0x3c>
 484:	80 e0       	ldi	r24, 0x00	; 0
 486:	61 c0       	rjmp	.+194    	; 0x54a <conv_int+0xfe>
 488:	c8 01       	movw	r24, r16
 48a:	73 d2       	rcall	.+1254   	; 0x972 <fgetc>
 48c:	97 fd       	sbrc	r25, 7
 48e:	fa cf       	rjmp	.-12     	; 0x484 <conv_int+0x38>
 490:	cb 2d       	mov	r28, r11
 492:	cd 7f       	andi	r28, 0xFD	; 253
 494:	2b 2d       	mov	r18, r11
 496:	20 73       	andi	r18, 0x30	; 48
 498:	f9 f4       	brne	.+62     	; 0x4d8 <conv_int+0x8c>
 49a:	80 33       	cpi	r24, 0x30	; 48
 49c:	e9 f4       	brne	.+58     	; 0x4d8 <conv_int+0x8c>
 49e:	aa 24       	eor	r10, r10
 4a0:	aa 94       	dec	r10
 4a2:	ad 0e       	add	r10, r29
 4a4:	09 f4       	brne	.+2      	; 0x4a8 <conv_int+0x5c>
 4a6:	3e c0       	rjmp	.+124    	; 0x524 <conv_int+0xd8>
 4a8:	c8 01       	movw	r24, r16
 4aa:	63 d2       	rcall	.+1222   	; 0x972 <fgetc>
 4ac:	97 fd       	sbrc	r25, 7
 4ae:	3a c0       	rjmp	.+116    	; 0x524 <conv_int+0xd8>
 4b0:	9c 01       	movw	r18, r24
 4b2:	2f 7d       	andi	r18, 0xDF	; 223
 4b4:	33 27       	eor	r19, r19
 4b6:	28 35       	cpi	r18, 0x58	; 88
 4b8:	31 05       	cpc	r19, r1
 4ba:	41 f4       	brne	.+16     	; 0x4cc <conv_int+0x80>
 4bc:	c2 64       	ori	r28, 0x42	; 66
 4be:	d2 50       	subi	r29, 0x02	; 2
 4c0:	89 f1       	breq	.+98     	; 0x524 <conv_int+0xd8>
 4c2:	c8 01       	movw	r24, r16
 4c4:	56 d2       	rcall	.+1196   	; 0x972 <fgetc>
 4c6:	97 ff       	sbrs	r25, 7
 4c8:	07 c0       	rjmp	.+14     	; 0x4d8 <conv_int+0x8c>
 4ca:	2c c0       	rjmp	.+88     	; 0x524 <conv_int+0xd8>
 4cc:	b6 fe       	sbrs	r11, 6
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <conv_int+0x88>
 4d0:	c2 60       	ori	r28, 0x02	; 2
 4d2:	01 c0       	rjmp	.+2      	; 0x4d6 <conv_int+0x8a>
 4d4:	c2 61       	ori	r28, 0x12	; 18
 4d6:	da 2d       	mov	r29, r10
 4d8:	81 2c       	mov	r8, r1
 4da:	91 2c       	mov	r9, r1
 4dc:	54 01       	movw	r10, r8
 4de:	20 ed       	ldi	r18, 0xD0	; 208
 4e0:	28 0f       	add	r18, r24
 4e2:	28 30       	cpi	r18, 0x08	; 8
 4e4:	78 f0       	brcs	.+30     	; 0x504 <conv_int+0xb8>
 4e6:	c4 ff       	sbrs	r28, 4
 4e8:	03 c0       	rjmp	.+6      	; 0x4f0 <conv_int+0xa4>
 4ea:	b8 01       	movw	r22, r16
 4ec:	bc d2       	rcall	.+1400   	; 0xa66 <ungetc>
 4ee:	17 c0       	rjmp	.+46     	; 0x51e <conv_int+0xd2>
 4f0:	2a 30       	cpi	r18, 0x0A	; 10
 4f2:	40 f0       	brcs	.+16     	; 0x504 <conv_int+0xb8>
 4f4:	c6 ff       	sbrs	r28, 6
 4f6:	f9 cf       	rjmp	.-14     	; 0x4ea <conv_int+0x9e>
 4f8:	2f 7d       	andi	r18, 0xDF	; 223
 4fa:	3f ee       	ldi	r19, 0xEF	; 239
 4fc:	32 0f       	add	r19, r18
 4fe:	36 30       	cpi	r19, 0x06	; 6
 500:	a0 f7       	brcc	.-24     	; 0x4ea <conv_int+0x9e>
 502:	27 50       	subi	r18, 0x07	; 7
 504:	4c 2f       	mov	r20, r28
 506:	c5 01       	movw	r24, r10
 508:	b4 01       	movw	r22, r8
 50a:	63 df       	rcall	.-314    	; 0x3d2 <mulacc>
 50c:	4b 01       	movw	r8, r22
 50e:	5c 01       	movw	r10, r24
 510:	c2 60       	ori	r28, 0x02	; 2
 512:	d1 50       	subi	r29, 0x01	; 1
 514:	51 f0       	breq	.+20     	; 0x52a <conv_int+0xde>
 516:	c8 01       	movw	r24, r16
 518:	2c d2       	rcall	.+1112   	; 0x972 <fgetc>
 51a:	97 ff       	sbrs	r25, 7
 51c:	e0 cf       	rjmp	.-64     	; 0x4de <conv_int+0x92>
 51e:	c1 fd       	sbrc	r28, 1
 520:	04 c0       	rjmp	.+8      	; 0x52a <conv_int+0xde>
 522:	b0 cf       	rjmp	.-160    	; 0x484 <conv_int+0x38>
 524:	81 2c       	mov	r8, r1
 526:	91 2c       	mov	r9, r1
 528:	54 01       	movw	r10, r8
 52a:	c7 ff       	sbrs	r28, 7
 52c:	08 c0       	rjmp	.+16     	; 0x53e <conv_int+0xf2>
 52e:	b0 94       	com	r11
 530:	a0 94       	com	r10
 532:	90 94       	com	r9
 534:	80 94       	com	r8
 536:	81 1c       	adc	r8, r1
 538:	91 1c       	adc	r9, r1
 53a:	a1 1c       	adc	r10, r1
 53c:	b1 1c       	adc	r11, r1
 53e:	2c 2f       	mov	r18, r28
 540:	b5 01       	movw	r22, r10
 542:	a4 01       	movw	r20, r8
 544:	c7 01       	movw	r24, r14
 546:	39 df       	rcall	.-398    	; 0x3ba <putval>
 548:	81 e0       	ldi	r24, 0x01	; 1
 54a:	df 91       	pop	r29
 54c:	cf 91       	pop	r28
 54e:	1f 91       	pop	r17
 550:	0f 91       	pop	r16
 552:	ff 90       	pop	r15
 554:	ef 90       	pop	r14
 556:	bf 90       	pop	r11
 558:	af 90       	pop	r10
 55a:	9f 90       	pop	r9
 55c:	8f 90       	pop	r8
 55e:	08 95       	ret

00000560 <conv_brk>:
 560:	5f 92       	push	r5
 562:	6f 92       	push	r6
 564:	7f 92       	push	r7
 566:	8f 92       	push	r8
 568:	9f 92       	push	r9
 56a:	af 92       	push	r10
 56c:	bf 92       	push	r11
 56e:	cf 92       	push	r12
 570:	df 92       	push	r13
 572:	ef 92       	push	r14
 574:	ff 92       	push	r15
 576:	0f 93       	push	r16
 578:	1f 93       	push	r17
 57a:	cf 93       	push	r28
 57c:	df 93       	push	r29
 57e:	cd b7       	in	r28, 0x3d	; 61
 580:	de b7       	in	r29, 0x3e	; 62
 582:	a0 97       	sbiw	r28, 0x20	; 32
 584:	0f b6       	in	r0, 0x3f	; 63
 586:	f8 94       	cli
 588:	de bf       	out	0x3e, r29	; 62
 58a:	0f be       	out	0x3f, r0	; 63
 58c:	cd bf       	out	0x3d, r28	; 61
 58e:	5c 01       	movw	r10, r24
 590:	96 2e       	mov	r9, r22
 592:	7a 01       	movw	r14, r20
 594:	f9 01       	movw	r30, r18
 596:	8e 01       	movw	r16, r28
 598:	0f 5f       	subi	r16, 0xFF	; 255
 59a:	1f 4f       	sbci	r17, 0xFF	; 255
 59c:	68 01       	movw	r12, r16
 59e:	80 e2       	ldi	r24, 0x20	; 32
 5a0:	d8 01       	movw	r26, r16
 5a2:	1d 92       	st	X+, r1
 5a4:	8a 95       	dec	r24
 5a6:	e9 f7       	brne	.-6      	; 0x5a2 <conv_brk+0x42>
 5a8:	d5 01       	movw	r26, r10
 5aa:	13 96       	adiw	r26, 0x03	; 3
 5ac:	8c 90       	ld	r8, X
 5ae:	80 e0       	ldi	r24, 0x00	; 0
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	61 2c       	mov	r6, r1
 5b4:	71 2c       	mov	r7, r1
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	61 e0       	ldi	r22, 0x01	; 1
 5ba:	70 e0       	ldi	r23, 0x00	; 0
 5bc:	83 fc       	sbrc	r8, 3
 5be:	25 91       	lpm	r18, Z+
 5c0:	83 fe       	sbrs	r8, 3
 5c2:	21 91       	ld	r18, Z+
 5c4:	8f 01       	movw	r16, r30
 5c6:	52 2e       	mov	r5, r18
 5c8:	21 11       	cpse	r18, r1
 5ca:	03 c0       	rjmp	.+6      	; 0x5d2 <conv_brk+0x72>
 5cc:	80 e0       	ldi	r24, 0x00	; 0
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	90 c0       	rjmp	.+288    	; 0x6f2 <conv_brk+0x192>
 5d2:	2e 35       	cpi	r18, 0x5E	; 94
 5d4:	11 f4       	brne	.+4      	; 0x5da <conv_brk+0x7a>
 5d6:	00 97       	sbiw	r24, 0x00	; 0
 5d8:	51 f1       	breq	.+84     	; 0x62e <conv_brk+0xce>
 5da:	43 2f       	mov	r20, r19
 5dc:	50 e0       	ldi	r21, 0x00	; 0
 5de:	48 17       	cp	r20, r24
 5e0:	59 07       	cpc	r21, r25
 5e2:	3c f4       	brge	.+14     	; 0x5f2 <conv_brk+0x92>
 5e4:	2d 35       	cpi	r18, 0x5D	; 93
 5e6:	59 f1       	breq	.+86     	; 0x63e <conv_brk+0xde>
 5e8:	2d 32       	cpi	r18, 0x2D	; 45
 5ea:	19 f4       	brne	.+6      	; 0x5f2 <conv_brk+0x92>
 5ec:	77 20       	and	r7, r7
 5ee:	09 f1       	breq	.+66     	; 0x632 <conv_brk+0xd2>
 5f0:	03 c0       	rjmp	.+6      	; 0x5f8 <conv_brk+0x98>
 5f2:	77 20       	and	r7, r7
 5f4:	09 f4       	brne	.+2      	; 0x5f8 <conv_brk+0x98>
 5f6:	68 c0       	rjmp	.+208    	; 0x6c8 <conv_brk+0x168>
 5f8:	45 2d       	mov	r20, r5
 5fa:	46 95       	lsr	r20
 5fc:	46 95       	lsr	r20
 5fe:	46 95       	lsr	r20
 600:	d6 01       	movw	r26, r12
 602:	a4 0f       	add	r26, r20
 604:	b1 1d       	adc	r27, r1
 606:	45 2d       	mov	r20, r5
 608:	47 70       	andi	r20, 0x07	; 7
 60a:	8b 01       	movw	r16, r22
 60c:	02 c0       	rjmp	.+4      	; 0x612 <conv_brk+0xb2>
 60e:	00 0f       	add	r16, r16
 610:	11 1f       	adc	r17, r17
 612:	4a 95       	dec	r20
 614:	e2 f7       	brpl	.-8      	; 0x60e <conv_brk+0xae>
 616:	a8 01       	movw	r20, r16
 618:	5c 91       	ld	r21, X
 61a:	45 2b       	or	r20, r21
 61c:	4c 93       	st	X, r20
 61e:	65 14       	cp	r6, r5
 620:	59 f0       	breq	.+22     	; 0x638 <conv_brk+0xd8>
 622:	56 14       	cp	r5, r6
 624:	10 f4       	brcc	.+4      	; 0x62a <conv_brk+0xca>
 626:	53 94       	inc	r5
 628:	e7 cf       	rjmp	.-50     	; 0x5f8 <conv_brk+0x98>
 62a:	5a 94       	dec	r5
 62c:	e5 cf       	rjmp	.-54     	; 0x5f8 <conv_brk+0x98>
 62e:	31 e0       	ldi	r19, 0x01	; 1
 630:	04 c0       	rjmp	.+8      	; 0x63a <conv_brk+0xda>
 632:	77 24       	eor	r7, r7
 634:	73 94       	inc	r7
 636:	01 c0       	rjmp	.+2      	; 0x63a <conv_brk+0xda>
 638:	71 2c       	mov	r7, r1
 63a:	01 96       	adiw	r24, 0x01	; 1
 63c:	bf cf       	rjmp	.-130    	; 0x5bc <conv_brk+0x5c>
 63e:	77 20       	and	r7, r7
 640:	19 f0       	breq	.+6      	; 0x648 <conv_brk+0xe8>
 642:	8e 81       	ldd	r24, Y+6	; 0x06
 644:	80 62       	ori	r24, 0x20	; 32
 646:	8e 83       	std	Y+6, r24	; 0x06
 648:	31 11       	cpse	r19, r1
 64a:	03 c0       	rjmp	.+6      	; 0x652 <conv_brk+0xf2>
 64c:	88 24       	eor	r8, r8
 64e:	83 94       	inc	r8
 650:	17 c0       	rjmp	.+46     	; 0x680 <conv_brk+0x120>
 652:	f6 01       	movw	r30, r12
 654:	9e 01       	movw	r18, r28
 656:	2f 5d       	subi	r18, 0xDF	; 223
 658:	3f 4f       	sbci	r19, 0xFF	; 255
 65a:	80 81       	ld	r24, Z
 65c:	80 95       	com	r24
 65e:	81 93       	st	Z+, r24
 660:	2e 17       	cp	r18, r30
 662:	3f 07       	cpc	r19, r31
 664:	d1 f7       	brne	.-12     	; 0x65a <conv_brk+0xfa>
 666:	f2 cf       	rjmp	.-28     	; 0x64c <conv_brk+0xec>
 668:	e1 14       	cp	r14, r1
 66a:	f1 04       	cpc	r15, r1
 66c:	29 f0       	breq	.+10     	; 0x678 <conv_brk+0x118>
 66e:	d7 01       	movw	r26, r14
 670:	8c 93       	st	X, r24
 672:	f7 01       	movw	r30, r14
 674:	31 96       	adiw	r30, 0x01	; 1
 676:	7f 01       	movw	r14, r30
 678:	9a 94       	dec	r9
 67a:	81 2c       	mov	r8, r1
 67c:	99 20       	and	r9, r9
 67e:	e9 f0       	breq	.+58     	; 0x6ba <conv_brk+0x15a>
 680:	c5 01       	movw	r24, r10
 682:	77 d1       	rcall	.+750    	; 0x972 <fgetc>
 684:	97 fd       	sbrc	r25, 7
 686:	17 c0       	rjmp	.+46     	; 0x6b6 <conv_brk+0x156>
 688:	fc 01       	movw	r30, r24
 68a:	ff 27       	eor	r31, r31
 68c:	23 e0       	ldi	r18, 0x03	; 3
 68e:	f5 95       	asr	r31
 690:	e7 95       	ror	r30
 692:	2a 95       	dec	r18
 694:	e1 f7       	brne	.-8      	; 0x68e <conv_brk+0x12e>
 696:	ec 0d       	add	r30, r12
 698:	fd 1d       	adc	r31, r13
 69a:	20 81       	ld	r18, Z
 69c:	30 e0       	ldi	r19, 0x00	; 0
 69e:	ac 01       	movw	r20, r24
 6a0:	47 70       	andi	r20, 0x07	; 7
 6a2:	55 27       	eor	r21, r21
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <conv_brk+0x14a>
 6a6:	35 95       	asr	r19
 6a8:	27 95       	ror	r18
 6aa:	4a 95       	dec	r20
 6ac:	e2 f7       	brpl	.-8      	; 0x6a6 <conv_brk+0x146>
 6ae:	20 fd       	sbrc	r18, 0
 6b0:	db cf       	rjmp	.-74     	; 0x668 <conv_brk+0x108>
 6b2:	b5 01       	movw	r22, r10
 6b4:	d8 d1       	rcall	.+944    	; 0xa66 <ungetc>
 6b6:	81 10       	cpse	r8, r1
 6b8:	89 cf       	rjmp	.-238    	; 0x5cc <conv_brk+0x6c>
 6ba:	e1 14       	cp	r14, r1
 6bc:	f1 04       	cpc	r15, r1
 6be:	11 f0       	breq	.+4      	; 0x6c4 <conv_brk+0x164>
 6c0:	d7 01       	movw	r26, r14
 6c2:	1c 92       	st	X, r1
 6c4:	c8 01       	movw	r24, r16
 6c6:	15 c0       	rjmp	.+42     	; 0x6f2 <conv_brk+0x192>
 6c8:	42 2f       	mov	r20, r18
 6ca:	46 95       	lsr	r20
 6cc:	46 95       	lsr	r20
 6ce:	46 95       	lsr	r20
 6d0:	d6 01       	movw	r26, r12
 6d2:	a4 0f       	add	r26, r20
 6d4:	b1 1d       	adc	r27, r1
 6d6:	42 2f       	mov	r20, r18
 6d8:	47 70       	andi	r20, 0x07	; 7
 6da:	8b 01       	movw	r16, r22
 6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <conv_brk+0x182>
 6de:	00 0f       	add	r16, r16
 6e0:	11 1f       	adc	r17, r17
 6e2:	4a 95       	dec	r20
 6e4:	e2 f7       	brpl	.-8      	; 0x6de <conv_brk+0x17e>
 6e6:	a8 01       	movw	r20, r16
 6e8:	5c 91       	ld	r21, X
 6ea:	45 2b       	or	r20, r21
 6ec:	4c 93       	st	X, r20
 6ee:	62 2e       	mov	r6, r18
 6f0:	a4 cf       	rjmp	.-184    	; 0x63a <conv_brk+0xda>
 6f2:	a0 96       	adiw	r28, 0x20	; 32
 6f4:	0f b6       	in	r0, 0x3f	; 63
 6f6:	f8 94       	cli
 6f8:	de bf       	out	0x3e, r29	; 62
 6fa:	0f be       	out	0x3f, r0	; 63
 6fc:	cd bf       	out	0x3d, r28	; 61
 6fe:	df 91       	pop	r29
 700:	cf 91       	pop	r28
 702:	1f 91       	pop	r17
 704:	0f 91       	pop	r16
 706:	ff 90       	pop	r15
 708:	ef 90       	pop	r14
 70a:	df 90       	pop	r13
 70c:	cf 90       	pop	r12
 70e:	bf 90       	pop	r11
 710:	af 90       	pop	r10
 712:	9f 90       	pop	r9
 714:	8f 90       	pop	r8
 716:	7f 90       	pop	r7
 718:	6f 90       	pop	r6
 71a:	5f 90       	pop	r5
 71c:	08 95       	ret

0000071e <vfscanf>:
 71e:	5f 92       	push	r5
 720:	6f 92       	push	r6
 722:	7f 92       	push	r7
 724:	8f 92       	push	r8
 726:	9f 92       	push	r9
 728:	af 92       	push	r10
 72a:	bf 92       	push	r11
 72c:	cf 92       	push	r12
 72e:	df 92       	push	r13
 730:	ef 92       	push	r14
 732:	ff 92       	push	r15
 734:	0f 93       	push	r16
 736:	1f 93       	push	r17
 738:	cf 93       	push	r28
 73a:	df 93       	push	r29
 73c:	6c 01       	movw	r12, r24
 73e:	eb 01       	movw	r28, r22
 740:	5a 01       	movw	r10, r20
 742:	fc 01       	movw	r30, r24
 744:	17 82       	std	Z+7, r1	; 0x07
 746:	16 82       	std	Z+6, r1	; 0x06
 748:	51 2c       	mov	r5, r1
 74a:	f6 01       	movw	r30, r12
 74c:	e3 80       	ldd	r14, Z+3	; 0x03
 74e:	fe 01       	movw	r30, r28
 750:	e3 fc       	sbrc	r14, 3
 752:	85 91       	lpm	r24, Z+
 754:	e3 fe       	sbrs	r14, 3
 756:	81 91       	ld	r24, Z+
 758:	18 2f       	mov	r17, r24
 75a:	ef 01       	movw	r28, r30
 75c:	88 23       	and	r24, r24
 75e:	09 f4       	brne	.+2      	; 0x762 <vfscanf+0x44>
 760:	e0 c0       	rjmp	.+448    	; 0x922 <vfscanf+0x204>
 762:	90 e0       	ldi	r25, 0x00	; 0
 764:	f3 d0       	rcall	.+486    	; 0x94c <isspace>
 766:	89 2b       	or	r24, r25
 768:	19 f0       	breq	.+6      	; 0x770 <vfscanf+0x52>
 76a:	c6 01       	movw	r24, r12
 76c:	59 de       	rcall	.-846    	; 0x420 <skip_spaces>
 76e:	ed cf       	rjmp	.-38     	; 0x74a <vfscanf+0x2c>
 770:	15 32       	cpi	r17, 0x25	; 37
 772:	41 f4       	brne	.+16     	; 0x784 <vfscanf+0x66>
 774:	fe 01       	movw	r30, r28
 776:	e3 fc       	sbrc	r14, 3
 778:	15 91       	lpm	r17, Z+
 77a:	e3 fe       	sbrs	r14, 3
 77c:	11 91       	ld	r17, Z+
 77e:	ef 01       	movw	r28, r30
 780:	15 32       	cpi	r17, 0x25	; 37
 782:	71 f4       	brne	.+28     	; 0x7a0 <vfscanf+0x82>
 784:	c6 01       	movw	r24, r12
 786:	f5 d0       	rcall	.+490    	; 0x972 <fgetc>
 788:	97 fd       	sbrc	r25, 7
 78a:	c9 c0       	rjmp	.+402    	; 0x91e <vfscanf+0x200>
 78c:	41 2f       	mov	r20, r17
 78e:	50 e0       	ldi	r21, 0x00	; 0
 790:	9c 01       	movw	r18, r24
 792:	33 27       	eor	r19, r19
 794:	24 17       	cp	r18, r20
 796:	35 07       	cpc	r19, r21
 798:	c1 f2       	breq	.-80     	; 0x74a <vfscanf+0x2c>
 79a:	b6 01       	movw	r22, r12
 79c:	64 d1       	rcall	.+712    	; 0xa66 <ungetc>
 79e:	c1 c0       	rjmp	.+386    	; 0x922 <vfscanf+0x204>
 7a0:	1a 32       	cpi	r17, 0x2A	; 42
 7a2:	39 f4       	brne	.+14     	; 0x7b2 <vfscanf+0x94>
 7a4:	e3 fc       	sbrc	r14, 3
 7a6:	15 91       	lpm	r17, Z+
 7a8:	e3 fe       	sbrs	r14, 3
 7aa:	11 91       	ld	r17, Z+
 7ac:	ef 01       	movw	r28, r30
 7ae:	01 e0       	ldi	r16, 0x01	; 1
 7b0:	01 c0       	rjmp	.+2      	; 0x7b4 <vfscanf+0x96>
 7b2:	00 e0       	ldi	r16, 0x00	; 0
 7b4:	f1 2c       	mov	r15, r1
 7b6:	20 ed       	ldi	r18, 0xD0	; 208
 7b8:	21 0f       	add	r18, r17
 7ba:	2a 30       	cpi	r18, 0x0A	; 10
 7bc:	78 f4       	brcc	.+30     	; 0x7dc <vfscanf+0xbe>
 7be:	02 60       	ori	r16, 0x02	; 2
 7c0:	6f 2d       	mov	r22, r15
 7c2:	70 e0       	ldi	r23, 0x00	; 0
 7c4:	80 e0       	ldi	r24, 0x00	; 0
 7c6:	90 e0       	ldi	r25, 0x00	; 0
 7c8:	40 e2       	ldi	r20, 0x20	; 32
 7ca:	03 de       	rcall	.-1018   	; 0x3d2 <mulacc>
 7cc:	f6 2e       	mov	r15, r22
 7ce:	fe 01       	movw	r30, r28
 7d0:	e3 fc       	sbrc	r14, 3
 7d2:	15 91       	lpm	r17, Z+
 7d4:	e3 fe       	sbrs	r14, 3
 7d6:	11 91       	ld	r17, Z+
 7d8:	ef 01       	movw	r28, r30
 7da:	ed cf       	rjmp	.-38     	; 0x7b6 <vfscanf+0x98>
 7dc:	01 ff       	sbrs	r16, 1
 7de:	03 c0       	rjmp	.+6      	; 0x7e6 <vfscanf+0xc8>
 7e0:	f1 10       	cpse	r15, r1
 7e2:	03 c0       	rjmp	.+6      	; 0x7ea <vfscanf+0xcc>
 7e4:	9e c0       	rjmp	.+316    	; 0x922 <vfscanf+0x204>
 7e6:	ff 24       	eor	r15, r15
 7e8:	fa 94       	dec	r15
 7ea:	18 36       	cpi	r17, 0x68	; 104
 7ec:	19 f0       	breq	.+6      	; 0x7f4 <vfscanf+0xd6>
 7ee:	1c 36       	cpi	r17, 0x6C	; 108
 7f0:	51 f0       	breq	.+20     	; 0x806 <vfscanf+0xe8>
 7f2:	10 c0       	rjmp	.+32     	; 0x814 <vfscanf+0xf6>
 7f4:	fe 01       	movw	r30, r28
 7f6:	e3 fc       	sbrc	r14, 3
 7f8:	15 91       	lpm	r17, Z+
 7fa:	e3 fe       	sbrs	r14, 3
 7fc:	11 91       	ld	r17, Z+
 7fe:	ef 01       	movw	r28, r30
 800:	18 36       	cpi	r17, 0x68	; 104
 802:	41 f4       	brne	.+16     	; 0x814 <vfscanf+0xf6>
 804:	08 60       	ori	r16, 0x08	; 8
 806:	04 60       	ori	r16, 0x04	; 4
 808:	fe 01       	movw	r30, r28
 80a:	e3 fc       	sbrc	r14, 3
 80c:	15 91       	lpm	r17, Z+
 80e:	e3 fe       	sbrs	r14, 3
 810:	11 91       	ld	r17, Z+
 812:	ef 01       	movw	r28, r30
 814:	11 23       	and	r17, r17
 816:	09 f4       	brne	.+2      	; 0x81a <vfscanf+0xfc>
 818:	84 c0       	rjmp	.+264    	; 0x922 <vfscanf+0x204>
 81a:	61 2f       	mov	r22, r17
 81c:	70 e0       	ldi	r23, 0x00	; 0
 81e:	8c e8       	ldi	r24, 0x8C	; 140
 820:	90 e0       	ldi	r25, 0x00	; 0
 822:	9c d0       	rcall	.+312    	; 0x95c <strchr_P>
 824:	89 2b       	or	r24, r25
 826:	09 f4       	brne	.+2      	; 0x82a <vfscanf+0x10c>
 828:	7c c0       	rjmp	.+248    	; 0x922 <vfscanf+0x204>
 82a:	00 fd       	sbrc	r16, 0
 82c:	07 c0       	rjmp	.+14     	; 0x83c <vfscanf+0x11e>
 82e:	f5 01       	movw	r30, r10
 830:	80 80       	ld	r8, Z
 832:	91 80       	ldd	r9, Z+1	; 0x01
 834:	c5 01       	movw	r24, r10
 836:	02 96       	adiw	r24, 0x02	; 2
 838:	5c 01       	movw	r10, r24
 83a:	02 c0       	rjmp	.+4      	; 0x840 <vfscanf+0x122>
 83c:	81 2c       	mov	r8, r1
 83e:	91 2c       	mov	r9, r1
 840:	1e 36       	cpi	r17, 0x6E	; 110
 842:	49 f4       	brne	.+18     	; 0x856 <vfscanf+0x138>
 844:	f6 01       	movw	r30, r12
 846:	46 81       	ldd	r20, Z+6	; 0x06
 848:	57 81       	ldd	r21, Z+7	; 0x07
 84a:	60 e0       	ldi	r22, 0x00	; 0
 84c:	70 e0       	ldi	r23, 0x00	; 0
 84e:	20 2f       	mov	r18, r16
 850:	c4 01       	movw	r24, r8
 852:	b3 dd       	rcall	.-1178   	; 0x3ba <putval>
 854:	7a cf       	rjmp	.-268    	; 0x74a <vfscanf+0x2c>
 856:	13 36       	cpi	r17, 0x63	; 99
 858:	a1 f4       	brne	.+40     	; 0x882 <vfscanf+0x164>
 85a:	01 fd       	sbrc	r16, 1
 85c:	02 c0       	rjmp	.+4      	; 0x862 <vfscanf+0x144>
 85e:	ff 24       	eor	r15, r15
 860:	f3 94       	inc	r15
 862:	c6 01       	movw	r24, r12
 864:	86 d0       	rcall	.+268    	; 0x972 <fgetc>
 866:	97 fd       	sbrc	r25, 7
 868:	5a c0       	rjmp	.+180    	; 0x91e <vfscanf+0x200>
 86a:	81 14       	cp	r8, r1
 86c:	91 04       	cpc	r9, r1
 86e:	29 f0       	breq	.+10     	; 0x87a <vfscanf+0x15c>
 870:	f4 01       	movw	r30, r8
 872:	80 83       	st	Z, r24
 874:	c4 01       	movw	r24, r8
 876:	01 96       	adiw	r24, 0x01	; 1
 878:	4c 01       	movw	r8, r24
 87a:	fa 94       	dec	r15
 87c:	f1 10       	cpse	r15, r1
 87e:	f1 cf       	rjmp	.-30     	; 0x862 <vfscanf+0x144>
 880:	4a c0       	rjmp	.+148    	; 0x916 <vfscanf+0x1f8>
 882:	1b 35       	cpi	r17, 0x5B	; 91
 884:	51 f4       	brne	.+20     	; 0x89a <vfscanf+0x17c>
 886:	9e 01       	movw	r18, r28
 888:	a4 01       	movw	r20, r8
 88a:	6f 2d       	mov	r22, r15
 88c:	c6 01       	movw	r24, r12
 88e:	68 de       	rcall	.-816    	; 0x560 <conv_brk>
 890:	ec 01       	movw	r28, r24
 892:	89 2b       	or	r24, r25
 894:	09 f0       	breq	.+2      	; 0x898 <vfscanf+0x17a>
 896:	3f c0       	rjmp	.+126    	; 0x916 <vfscanf+0x1f8>
 898:	39 c0       	rjmp	.+114    	; 0x90c <vfscanf+0x1ee>
 89a:	c6 01       	movw	r24, r12
 89c:	c1 dd       	rcall	.-1150   	; 0x420 <skip_spaces>
 89e:	97 fd       	sbrc	r25, 7
 8a0:	3e c0       	rjmp	.+124    	; 0x91e <vfscanf+0x200>
 8a2:	1f 36       	cpi	r17, 0x6F	; 111
 8a4:	49 f1       	breq	.+82     	; 0x8f8 <vfscanf+0x1da>
 8a6:	28 f4       	brcc	.+10     	; 0x8b2 <vfscanf+0x194>
 8a8:	14 36       	cpi	r17, 0x64	; 100
 8aa:	21 f1       	breq	.+72     	; 0x8f4 <vfscanf+0x1d6>
 8ac:	19 36       	cpi	r17, 0x69	; 105
 8ae:	39 f1       	breq	.+78     	; 0x8fe <vfscanf+0x1e0>
 8b0:	25 c0       	rjmp	.+74     	; 0x8fc <vfscanf+0x1de>
 8b2:	13 37       	cpi	r17, 0x73	; 115
 8b4:	71 f0       	breq	.+28     	; 0x8d2 <vfscanf+0x1b4>
 8b6:	15 37       	cpi	r17, 0x75	; 117
 8b8:	e9 f0       	breq	.+58     	; 0x8f4 <vfscanf+0x1d6>
 8ba:	20 c0       	rjmp	.+64     	; 0x8fc <vfscanf+0x1de>
 8bc:	81 14       	cp	r8, r1
 8be:	91 04       	cpc	r9, r1
 8c0:	29 f0       	breq	.+10     	; 0x8cc <vfscanf+0x1ae>
 8c2:	f4 01       	movw	r30, r8
 8c4:	60 82       	st	Z, r6
 8c6:	c4 01       	movw	r24, r8
 8c8:	01 96       	adiw	r24, 0x01	; 1
 8ca:	4c 01       	movw	r8, r24
 8cc:	fa 94       	dec	r15
 8ce:	ff 20       	and	r15, r15
 8d0:	59 f0       	breq	.+22     	; 0x8e8 <vfscanf+0x1ca>
 8d2:	c6 01       	movw	r24, r12
 8d4:	4e d0       	rcall	.+156    	; 0x972 <fgetc>
 8d6:	3c 01       	movw	r6, r24
 8d8:	97 fd       	sbrc	r25, 7
 8da:	06 c0       	rjmp	.+12     	; 0x8e8 <vfscanf+0x1ca>
 8dc:	37 d0       	rcall	.+110    	; 0x94c <isspace>
 8de:	89 2b       	or	r24, r25
 8e0:	69 f3       	breq	.-38     	; 0x8bc <vfscanf+0x19e>
 8e2:	b6 01       	movw	r22, r12
 8e4:	c3 01       	movw	r24, r6
 8e6:	bf d0       	rcall	.+382    	; 0xa66 <ungetc>
 8e8:	81 14       	cp	r8, r1
 8ea:	91 04       	cpc	r9, r1
 8ec:	a1 f0       	breq	.+40     	; 0x916 <vfscanf+0x1f8>
 8ee:	f4 01       	movw	r30, r8
 8f0:	10 82       	st	Z, r1
 8f2:	11 c0       	rjmp	.+34     	; 0x916 <vfscanf+0x1f8>
 8f4:	00 62       	ori	r16, 0x20	; 32
 8f6:	03 c0       	rjmp	.+6      	; 0x8fe <vfscanf+0x1e0>
 8f8:	00 61       	ori	r16, 0x10	; 16
 8fa:	01 c0       	rjmp	.+2      	; 0x8fe <vfscanf+0x1e0>
 8fc:	00 64       	ori	r16, 0x40	; 64
 8fe:	20 2f       	mov	r18, r16
 900:	a4 01       	movw	r20, r8
 902:	6f 2d       	mov	r22, r15
 904:	c6 01       	movw	r24, r12
 906:	a2 dd       	rcall	.-1212   	; 0x44c <conv_int>
 908:	81 11       	cpse	r24, r1
 90a:	05 c0       	rjmp	.+10     	; 0x916 <vfscanf+0x1f8>
 90c:	f6 01       	movw	r30, r12
 90e:	83 81       	ldd	r24, Z+3	; 0x03
 910:	80 73       	andi	r24, 0x30	; 48
 912:	29 f4       	brne	.+10     	; 0x91e <vfscanf+0x200>
 914:	06 c0       	rjmp	.+12     	; 0x922 <vfscanf+0x204>
 916:	00 fd       	sbrc	r16, 0
 918:	18 cf       	rjmp	.-464    	; 0x74a <vfscanf+0x2c>
 91a:	53 94       	inc	r5
 91c:	16 cf       	rjmp	.-468    	; 0x74a <vfscanf+0x2c>
 91e:	55 20       	and	r5, r5
 920:	19 f0       	breq	.+6      	; 0x928 <vfscanf+0x20a>
 922:	85 2d       	mov	r24, r5
 924:	90 e0       	ldi	r25, 0x00	; 0
 926:	02 c0       	rjmp	.+4      	; 0x92c <vfscanf+0x20e>
 928:	8f ef       	ldi	r24, 0xFF	; 255
 92a:	9f ef       	ldi	r25, 0xFF	; 255
 92c:	df 91       	pop	r29
 92e:	cf 91       	pop	r28
 930:	1f 91       	pop	r17
 932:	0f 91       	pop	r16
 934:	ff 90       	pop	r15
 936:	ef 90       	pop	r14
 938:	df 90       	pop	r13
 93a:	cf 90       	pop	r12
 93c:	bf 90       	pop	r11
 93e:	af 90       	pop	r10
 940:	9f 90       	pop	r9
 942:	8f 90       	pop	r8
 944:	7f 90       	pop	r7
 946:	6f 90       	pop	r6
 948:	5f 90       	pop	r5
 94a:	08 95       	ret

0000094c <isspace>:
 94c:	91 11       	cpse	r25, r1
 94e:	a4 c0       	rjmp	.+328    	; 0xa98 <__ctype_isfalse>
 950:	80 32       	cpi	r24, 0x20	; 32
 952:	19 f0       	breq	.+6      	; 0x95a <isspace+0xe>
 954:	89 50       	subi	r24, 0x09	; 9
 956:	85 50       	subi	r24, 0x05	; 5
 958:	d0 f7       	brcc	.-12     	; 0x94e <isspace+0x2>
 95a:	08 95       	ret

0000095c <strchr_P>:
 95c:	fc 01       	movw	r30, r24
 95e:	05 90       	lpm	r0, Z+
 960:	06 16       	cp	r0, r22
 962:	21 f0       	breq	.+8      	; 0x96c <strchr_P+0x10>
 964:	00 20       	and	r0, r0
 966:	d9 f7       	brne	.-10     	; 0x95e <strchr_P+0x2>
 968:	c0 01       	movw	r24, r0
 96a:	08 95       	ret
 96c:	31 97       	sbiw	r30, 0x01	; 1
 96e:	cf 01       	movw	r24, r30
 970:	08 95       	ret

00000972 <fgetc>:
 972:	cf 93       	push	r28
 974:	df 93       	push	r29
 976:	ec 01       	movw	r28, r24
 978:	2b 81       	ldd	r18, Y+3	; 0x03
 97a:	20 ff       	sbrs	r18, 0
 97c:	33 c0       	rjmp	.+102    	; 0x9e4 <fgetc+0x72>
 97e:	26 ff       	sbrs	r18, 6
 980:	0a c0       	rjmp	.+20     	; 0x996 <fgetc+0x24>
 982:	2f 7b       	andi	r18, 0xBF	; 191
 984:	2b 83       	std	Y+3, r18	; 0x03
 986:	8e 81       	ldd	r24, Y+6	; 0x06
 988:	9f 81       	ldd	r25, Y+7	; 0x07
 98a:	01 96       	adiw	r24, 0x01	; 1
 98c:	9f 83       	std	Y+7, r25	; 0x07
 98e:	8e 83       	std	Y+6, r24	; 0x06
 990:	8a 81       	ldd	r24, Y+2	; 0x02
 992:	90 e0       	ldi	r25, 0x00	; 0
 994:	29 c0       	rjmp	.+82     	; 0x9e8 <fgetc+0x76>
 996:	22 ff       	sbrs	r18, 2
 998:	0f c0       	rjmp	.+30     	; 0x9b8 <fgetc+0x46>
 99a:	e8 81       	ld	r30, Y
 99c:	f9 81       	ldd	r31, Y+1	; 0x01
 99e:	80 81       	ld	r24, Z
 9a0:	08 2e       	mov	r0, r24
 9a2:	00 0c       	add	r0, r0
 9a4:	99 0b       	sbc	r25, r25
 9a6:	00 97       	sbiw	r24, 0x00	; 0
 9a8:	19 f4       	brne	.+6      	; 0x9b0 <fgetc+0x3e>
 9aa:	20 62       	ori	r18, 0x20	; 32
 9ac:	2b 83       	std	Y+3, r18	; 0x03
 9ae:	1a c0       	rjmp	.+52     	; 0x9e4 <fgetc+0x72>
 9b0:	31 96       	adiw	r30, 0x01	; 1
 9b2:	f9 83       	std	Y+1, r31	; 0x01
 9b4:	e8 83       	st	Y, r30
 9b6:	0e c0       	rjmp	.+28     	; 0x9d4 <fgetc+0x62>
 9b8:	ea 85       	ldd	r30, Y+10	; 0x0a
 9ba:	fb 85       	ldd	r31, Y+11	; 0x0b
 9bc:	09 95       	icall
 9be:	97 ff       	sbrs	r25, 7
 9c0:	09 c0       	rjmp	.+18     	; 0x9d4 <fgetc+0x62>
 9c2:	2b 81       	ldd	r18, Y+3	; 0x03
 9c4:	01 96       	adiw	r24, 0x01	; 1
 9c6:	11 f0       	breq	.+4      	; 0x9cc <fgetc+0x5a>
 9c8:	80 e2       	ldi	r24, 0x20	; 32
 9ca:	01 c0       	rjmp	.+2      	; 0x9ce <fgetc+0x5c>
 9cc:	80 e1       	ldi	r24, 0x10	; 16
 9ce:	82 2b       	or	r24, r18
 9d0:	8b 83       	std	Y+3, r24	; 0x03
 9d2:	08 c0       	rjmp	.+16     	; 0x9e4 <fgetc+0x72>
 9d4:	2e 81       	ldd	r18, Y+6	; 0x06
 9d6:	3f 81       	ldd	r19, Y+7	; 0x07
 9d8:	2f 5f       	subi	r18, 0xFF	; 255
 9da:	3f 4f       	sbci	r19, 0xFF	; 255
 9dc:	3f 83       	std	Y+7, r19	; 0x07
 9de:	2e 83       	std	Y+6, r18	; 0x06
 9e0:	99 27       	eor	r25, r25
 9e2:	02 c0       	rjmp	.+4      	; 0x9e8 <fgetc+0x76>
 9e4:	8f ef       	ldi	r24, 0xFF	; 255
 9e6:	9f ef       	ldi	r25, 0xFF	; 255
 9e8:	df 91       	pop	r29
 9ea:	cf 91       	pop	r28
 9ec:	08 95       	ret

000009ee <fputc>:
 9ee:	0f 93       	push	r16
 9f0:	1f 93       	push	r17
 9f2:	cf 93       	push	r28
 9f4:	df 93       	push	r29
 9f6:	fb 01       	movw	r30, r22
 9f8:	23 81       	ldd	r18, Z+3	; 0x03
 9fa:	21 fd       	sbrc	r18, 1
 9fc:	03 c0       	rjmp	.+6      	; 0xa04 <fputc+0x16>
 9fe:	8f ef       	ldi	r24, 0xFF	; 255
 a00:	9f ef       	ldi	r25, 0xFF	; 255
 a02:	2c c0       	rjmp	.+88     	; 0xa5c <fputc+0x6e>
 a04:	22 ff       	sbrs	r18, 2
 a06:	16 c0       	rjmp	.+44     	; 0xa34 <fputc+0x46>
 a08:	46 81       	ldd	r20, Z+6	; 0x06
 a0a:	57 81       	ldd	r21, Z+7	; 0x07
 a0c:	24 81       	ldd	r18, Z+4	; 0x04
 a0e:	35 81       	ldd	r19, Z+5	; 0x05
 a10:	42 17       	cp	r20, r18
 a12:	53 07       	cpc	r21, r19
 a14:	44 f4       	brge	.+16     	; 0xa26 <fputc+0x38>
 a16:	a0 81       	ld	r26, Z
 a18:	b1 81       	ldd	r27, Z+1	; 0x01
 a1a:	9d 01       	movw	r18, r26
 a1c:	2f 5f       	subi	r18, 0xFF	; 255
 a1e:	3f 4f       	sbci	r19, 0xFF	; 255
 a20:	31 83       	std	Z+1, r19	; 0x01
 a22:	20 83       	st	Z, r18
 a24:	8c 93       	st	X, r24
 a26:	26 81       	ldd	r18, Z+6	; 0x06
 a28:	37 81       	ldd	r19, Z+7	; 0x07
 a2a:	2f 5f       	subi	r18, 0xFF	; 255
 a2c:	3f 4f       	sbci	r19, 0xFF	; 255
 a2e:	37 83       	std	Z+7, r19	; 0x07
 a30:	26 83       	std	Z+6, r18	; 0x06
 a32:	14 c0       	rjmp	.+40     	; 0xa5c <fputc+0x6e>
 a34:	8b 01       	movw	r16, r22
 a36:	ec 01       	movw	r28, r24
 a38:	fb 01       	movw	r30, r22
 a3a:	00 84       	ldd	r0, Z+8	; 0x08
 a3c:	f1 85       	ldd	r31, Z+9	; 0x09
 a3e:	e0 2d       	mov	r30, r0
 a40:	09 95       	icall
 a42:	89 2b       	or	r24, r25
 a44:	e1 f6       	brne	.-72     	; 0x9fe <fputc+0x10>
 a46:	d8 01       	movw	r26, r16
 a48:	16 96       	adiw	r26, 0x06	; 6
 a4a:	8d 91       	ld	r24, X+
 a4c:	9c 91       	ld	r25, X
 a4e:	17 97       	sbiw	r26, 0x07	; 7
 a50:	01 96       	adiw	r24, 0x01	; 1
 a52:	17 96       	adiw	r26, 0x07	; 7
 a54:	9c 93       	st	X, r25
 a56:	8e 93       	st	-X, r24
 a58:	16 97       	sbiw	r26, 0x06	; 6
 a5a:	ce 01       	movw	r24, r28
 a5c:	df 91       	pop	r29
 a5e:	cf 91       	pop	r28
 a60:	1f 91       	pop	r17
 a62:	0f 91       	pop	r16
 a64:	08 95       	ret

00000a66 <ungetc>:
 a66:	fb 01       	movw	r30, r22
 a68:	23 81       	ldd	r18, Z+3	; 0x03
 a6a:	20 ff       	sbrs	r18, 0
 a6c:	12 c0       	rjmp	.+36     	; 0xa92 <ungetc+0x2c>
 a6e:	26 fd       	sbrc	r18, 6
 a70:	10 c0       	rjmp	.+32     	; 0xa92 <ungetc+0x2c>
 a72:	8f 3f       	cpi	r24, 0xFF	; 255
 a74:	3f ef       	ldi	r19, 0xFF	; 255
 a76:	93 07       	cpc	r25, r19
 a78:	61 f0       	breq	.+24     	; 0xa92 <ungetc+0x2c>
 a7a:	82 83       	std	Z+2, r24	; 0x02
 a7c:	2f 7d       	andi	r18, 0xDF	; 223
 a7e:	20 64       	ori	r18, 0x40	; 64
 a80:	23 83       	std	Z+3, r18	; 0x03
 a82:	26 81       	ldd	r18, Z+6	; 0x06
 a84:	37 81       	ldd	r19, Z+7	; 0x07
 a86:	21 50       	subi	r18, 0x01	; 1
 a88:	31 09       	sbc	r19, r1
 a8a:	37 83       	std	Z+7, r19	; 0x07
 a8c:	26 83       	std	Z+6, r18	; 0x06
 a8e:	99 27       	eor	r25, r25
 a90:	08 95       	ret
 a92:	8f ef       	ldi	r24, 0xFF	; 255
 a94:	9f ef       	ldi	r25, 0xFF	; 255
 a96:	08 95       	ret

00000a98 <__ctype_isfalse>:
 a98:	99 27       	eor	r25, r25
 a9a:	88 27       	eor	r24, r24

00000a9c <__ctype_istrue>:
 a9c:	08 95       	ret

00000a9e <_exit>:
 a9e:	f8 94       	cli

00000aa0 <__stop_program>:
 aa0:	ff cf       	rjmp	.-2      	; 0xaa0 <__stop_program>
